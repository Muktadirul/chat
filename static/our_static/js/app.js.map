{"version":3,"sources":["app/actions.js","app/components/User.jsx","app/container/App.jsx","app/container/ChatWindow.jsx","app/container/ChatsList.jsx","app/container/UsersList.jsx","app/initialize.js","app/reducer.js","app/utils/apiCalls.js"],"names":[],"mappings":"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","file":"public/app.js","sourcesContent":["import {getAllUsers, createChat as _createChat} from 'utils/apiCalls';\n\nexport const initialFetchUsers = () => {\n  return dispatch => {\n    getAllUsers().then(users => {\n      dispatch({ type: 'ADD_USERS', users });\n    });\n  };\n};\n\nexport const createChat = (username) => {\n  return dispatch => {\n    _createChat(username).then(chat_id => {\n      dispatch({ type: 'ADD_CHAT', chat_id });\n    });\n  };\n};\n","import React from 'react';\n\nexport default React.createClass({\n  propTypes: {\n    username: React.PropTypes.string.isRequired,\n    onChatCreate: React.PropTypes.func.isRequired\n  },\n\n  handleClick(username) {\n    this.props.onChatCreate(username);\n  },\n\n  render () {\n    const {username} = this.props;\n\n    return <div className=\"user\">\n      <div>{username}</div>\n      <button onClick={this.handleClick.bind(this, username)}>Start chat</button>\n    </div>\n  }\n});\n","import React from 'react';\n\nimport ChatsList from './ChatsList';\nimport ChatWindow from './ChatWindow';\nimport UsersList from './UsersList';\n\nexport default () => {\n  return <div className=\"container\">\n    <ChatsList />\n    <ChatWindow />\n    <UsersList />\n  </div>\n}\n","import React from 'react';\n\nexport default () => {\n  return <div className=\"chat-window\"></div>\n}\n","import React from 'react';\n\nexport default () => {\n  return <div className=\"chats-list\"></div>\n}\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {createChat} from 'actions';\n\nimport User from 'components/User'\n\nconst UserList = ({users, onChatCreate}) => {\n  return <div className=\"users-list\">\n    {users.map(user => {\n      return <User username={user.username} onChatCreate={onChatCreate} key={user.username} />;\n    })}\n  </div>;\n}\n\nconst mapStateToProps = (state) => ({\n  users: state.users\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChatCreate(username) {\n    dispatch(createChat(username));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserList);\n","require('es6-promise').polyfill();\nrequire('whatwg-fetch')\n\nimport ReactDOM from 'react-dom';\nimport React from 'react';\nimport {createStore, applyMiddleware} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport {Provider} from 'react-redux';\nimport 'whatwg-fetch';\n\nimport reducer from 'reducer';\nimport App from 'container/App';\n\nimport {initialFetchUsers} from 'actions';\n\nconst store = createStore(reducer, applyMiddleware(thunkMiddleware));\n\nstore.dispatch(initialFetchUsers());\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const el = document.createElement('div');\n  el.id = 'app';\n  document.body.appendChild(el);\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    el\n  );\n});\n","const initialState = {\n  users: [],\n  chats: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case 'ADD_USERS':\n      return Object.assign({}, state, { users: action.users });\n    case 'ADD_CHAT':\n      let chats = Array.from(state.chats);\n      chats.push(action.chat_id);\n      console.log(action.chat_id);\n      return Object.assign({}, state, {chats: chats});\n    default:\n      return state;\n  }\n}\n","export const getAllUsers = () => {\n  return new Promise((resolve, reject) => {\n    fetch('http://127.0.0.1:8000/chat/get_all_users', {\n      method: 'GET',\n      credentials: 'same-origin'\n    })\n    .then(response => {\n      response.json().then(response => resolve(response.users));\n    });\n  });\n};\n\nexport const createChat = (username) => {\n  return new Promise((resolve, reject) => {\n    fetch(`http://127.0.0.1:8000/chat/create_chat/?username=${username}`, {\n      method: 'GET',\n      credentials: 'same-origin'\n    })\n    .then(response => {\n      response.json().then(response => resolve(response.chat_id));\n    });\n  });\n};\n"]}