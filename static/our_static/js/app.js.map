{"version":3,"sources":["app/actions.js","app/container/App.jsx","app/container/ChatWindow.jsx","app/container/ChatsList.jsx","app/container/UsersList.jsx","app/initialize.js","app/reducer.js","app/utils/apiCalls.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEO,IAAM,gDAAoB,SAApB,iBAAoB,GAAM;AACrC,SAAO,oBAAY;AACjB,iCAAc,IAAd,CAAmB,iBAAS;AAC1B,eAAS,EAAE,MAAM,WAAR,EAAqB,YAArB,EAAT;AACD,KAFD;AAGD,GAJD;AAKD,CANM;;;;;;;;;;ACFP;;;;AAEA;;;;AACA;;;;AACA;;;;;;kBAEe,YAAM;AACnB,SAAO;AAAA;AAAA,MAAK,WAAU,WAAf;AACL,4DADK;AAEL,6DAFK;AAGL;AAHK,GAAP;AAKD,C;;;;;;;;;;ACZD;;;;;;kBAEe,YAAM;AACnB,SAAO,uCAAK,WAAU,aAAf,GAAP;AACD,C;;;;;;;;;;ACJD;;;;;;kBAEe,YAAM;AACnB,SAAO,uCAAK,WAAU,YAAf,GAAP;AACD,C;;;;;;;;;;ACJD;;;;;;kBAEe,YAAM;AACnB,SAAO,uCAAK,WAAU,YAAf,GAAP;AACD,C;;;;;;ACDD;;;;AACA;;;;AACA;;AACA;;;;AACA;;AACA;;AAEA;;;;AACA;;;;AAEA;;;;AAbA,QAAQ,aAAR,EAAuB,QAAvB;AACA,QAAQ,cAAR;;AAcA,IAAM,QAAQ,2CAAqB,iDAArB,CAAd;;AAEA,MAAM,QAAN,CAAe,iCAAf;;AAEA,SAAS,gBAAT,CAA0B,kBAA1B,EAA8C,YAAM;AAClD,MAAM,KAAK,SAAS,aAAT,CAAuB,KAAvB,CAAX;AACA,KAAG,EAAH,GAAQ,KAAR;AACA,WAAS,IAAT,CAAc,WAAd,CAA0B,EAA1B;AACA,qBAAS,MAAT,CACE;AAAA;AAAA,MAAU,OAAO,KAAjB;AACE;AADF,GADF,EAIE,EAJF;AAMD,CAVD;;;;;;;;;;kBCfe,YAAuC;AAAA,MAA9B,KAA8B,yDAAtB,YAAsB;AAAA,MAAR,MAAQ;;AACpD,UAAQ,OAAO,IAAf;AACE,SAAK,WAAL;AACE,aAAO,OAAO,MAAP,CAAc,EAAd,EAAkB,KAAlB,EAAyB,EAAE,OAAO,OAAO,KAAhB,EAAzB,CAAP;AACF;AACE,aAAO,KAAP;AAJJ;AAMD,C;;AAXD,IAAM,eAAe;AACnB,SAAO;AADY,CAArB;;;;;;;;;ACAO,IAAM,oCAAc,SAAd,WAAc,GAAM;AAC/B,MAAM,UAAU,IAAI,OAAJ,EAAhB;AACA,UAAQ,MAAR,CAAe,kBAAf,EAAmC,EAAnC;;AAEA,MAAI,OAAO,EAAE,QAAQ,KAAV;AACE,aAAS,OADX;AAEE,UAAM,MAFR;AAGE,WAAO,SAHT,EAAX;;AAKA,SAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;AACtC,UAAM,0CAAN,EAAkD,IAAlD,EACC,IADD,CACM,oBAAY;AAChB,eAAS,IAAT,GAAgB,IAAhB,CAAqB;AAAA,eAAY,QAAQ,SAAS,KAAjB,CAAZ;AAAA,OAArB;AACD,KAHD;AAID,GALM,CAAP;AAMD,CAfM","file":"public/app.js","sourcesContent":["import {getAllUsers} from 'utils/apiCalls';\n\nexport const initialFetchUsers = () => {\n  return dispatch => {\n    getAllUsers().then(users => {\n      dispatch({ type: 'ADD_USERS', users });\n    });\n  };\n};\n","import React from 'react';\n\nimport ChatsList from './ChatsList';\nimport ChatWindow from './ChatWindow';\nimport UsersList from './UsersList';\n\nexport default () => {\n  return <div className=\"container\">\n    <ChatsList />\n    <ChatWindow />\n    <UsersList />\n  </div>\n}\n","import React from 'react';\n\nexport default () => {\n  return <div className=\"chat-window\"></div>\n}\n","import React from 'react';\n\nexport default () => {\n  return <div className=\"chats-list\"></div>\n}\n","import React from 'react';\n\nexport default () => {\n  return <div className=\"users-list\"></div>\n}\n","require('es6-promise').polyfill();\nrequire('whatwg-fetch')\n\nimport ReactDOM from 'react-dom';\nimport React from 'react';\nimport {createStore, applyMiddleware} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport {Provider} from 'react-redux';\nimport 'whatwg-fetch';\n\nimport reducer from 'reducer';\nimport App from 'container/App';\n\nimport {initialFetchUsers} from 'actions';\n\nconst store = createStore(reducer, applyMiddleware(thunkMiddleware));\n\nstore.dispatch(initialFetchUsers());\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const el = document.createElement('div');\n  el.id = 'app';\n  document.body.appendChild(el);\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    el\n  );\n});\n","const initialState = {\n  users: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case 'ADD_USERS':\n      return Object.assign({}, state, { users: action.users });\n    default:\n      return state;\n  }\n}\n","export const getAllUsers = () => {\n  const headers = new Headers();\n  headers.append('X-Requested-With', '')\n\n  var init = { method: 'GET',\n               headers: headers,\n               mode: 'cors',\n               cache: 'default' };\n\n  return new Promise((resolve, reject) => {\n    fetch('http://127.0.0.1:8000/chat/get_all_users', init)\n    .then(response => {\n      response.json().then(response => resolve(response.users));\n    });\n  });\n};\n"]}