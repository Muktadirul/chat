{"version":3,"sources":["app/actions.js","app/components/Chat.jsx","app/components/MessageForm.jsx","app/components/MessagesBlock.jsx","app/components/User.jsx","app/container/App.jsx","app/container/ChatWindow.jsx","app/container/ChatsList.jsx","app/container/UsersList.jsx","app/initialize.js","app/reducer.js","app/utils/apiCalls.js"],"names":[],"mappings":"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","file":"public/app.js","sourcesContent":["import {createChat as _createChat, loadChatMessages as _loadChatMessages,\n  getCurrentUser, getAllUsers, getUserChats} from 'utils/apiCalls';\n\nexport const selectChat = (chat) => ({\n  type: 'SELECT_CHAT',\n  chat\n});\n\nexport const addChatMessage = (chatId, message) => ({\n  type: 'ADD_CHAT_MESSAGE',\n  chatId,\n  message\n});\n\nexport const createChat = (username) => {\n  return dispatch => {\n    _createChat(username).then(chatId => {\n      dispatch({ type: 'ADD_CHAT', chatId });\n    });\n  };\n};\n\nexport const loadChatMessages = (chatId) => {\n  return dispatch => {\n    _loadChatMessages(chatId).then(chatMessages => {\n      dispatch({ type: 'RECEIVE_CHAT_MESSAGES', chatMessages });\n    });\n  };\n};\n\nexport const initialFetchCurrentUser = () => {\n  return dispatch => {\n    getCurrentUser().then(user => {\n      dispatch({ type: 'RECEIVE_CURRENT_USER', user });\n    });\n  };\n};\n\nexport const initialFetchUsers = () => {\n  return dispatch => {\n    getAllUsers().then(users => {\n      dispatch({ type: 'RECEIVE_USERS', users });\n    });\n  };\n};\n\nexport const initialFetchChats = () => {\n  return dispatch => {\n    getUserChats().then(chats => {\n      dispatch({ type: 'RECEIVE_CHATS', chats});\n    });\n  };\n};\n","import React from 'react';\n\nexport default React.createClass({\n  propTypes: {\n    chat: React.PropTypes.object.isRequired,\n    selectedChat: React.PropTypes.object.isRequired,\n    onSelect: React.PropTypes.func.isRequired\n  },\n\n  handleClick() {\n    this.props.onSelect(this.props.chat);\n  },\n\n  render () {\n    const {chat, selectedChat} = this.props;\n    const className = (chat.chat_id === selectedChat.chat_id) ? 'Chat-selected' : 'Chat';\n\n    return <div className={className} onClick={this.handleClick}>\n      {chat.chat_id}\n    </div>;\n  }\n});\n","import React from 'react';\n\nlet ws;\n\nexport default React.createClass({\n  propTypes: {\n    chat: React.PropTypes.object.isRequired,\n    onMessage: React.PropTypes.func.isRequired\n  },\n\n  componentWillMount() {\n    const {chat, onMessage} = this.props;\n\n    ws = new WebSocket(`ws://127.0.0.1:8888/tornado_chat/${chat.chat_id}/`);\n\n    ws.onmessage = function(e) {\n      onMessage(chat.chat_id, e.data);\n    };\n  },\n\n  shouldComponentUpdate(nextProps) {\n    // TODO make return value more beautyful:)\n    if(nextProps.chat.chat_id === this.props.chat.chat_id) {\n      return false;\n    }\n    else {\n      return true;\n    }\n  },\n\n  componentWillUpdate(nextProps) {\n    ws.close();\n    ws = new WebSocket(`ws://127.0.0.1:8888/tornado_chat/${nextProps.chat.chat_id}/`);\n\n    ws.onmessage = function(e) {\n      nextProps.onMessage(nextProps.chat.chat_id, e.data);\n    };\n  },\n\n  handleClick() {\n    const message = this.refs.message.value;\n    ws.send(message);\n    this.refs.message.value = '';\n  },\n\n  render() {\n    return <div className=\"MessageForm\">\n      <textarea ref=\"message\" type=\"text\" placeholder=\"Type your text here\" />\n      <button onClick={this.handleClick}>Send</button>\n    </div>\n  }\n});\n","import React from 'react';\n\nexport default React.createClass({\n  propTypes: {\n    chatMessages: React.PropTypes.array\n  },\n\n  render () {\n    const {chatMessages} = this.props;\n\n    if(chatMessages) {\n      return <div className=\"MessagesBlock\">\n        {chatMessages.map((message, i) => {\n          return <div className=\"Message\" key={i}>{message.text}</div>\n        })}\n      </div>;\n    }\n    else {\n       return <div className=\"MessagesBlock\">\n         There is no messages\n       </div>\n    }\n  }\n});\n","import React from 'react';\n\nexport default React.createClass({\n  propTypes: {\n    username: React.PropTypes.string.isRequired,\n    onChatCreate: React.PropTypes.func.isRequired\n  },\n\n  handleClick() {\n    this.props.onChatCreate(this.props.username);\n  },\n\n  render () {\n    const {username} = this.props;\n\n    return <div className=\"User\">\n      <div>{username}</div>\n      <button onClick={this.handleClick}>Start chat</button>\n    </div>;\n  }\n});\n","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport ChatsList from './ChatsList';\nimport ChatWindow from './ChatWindow';\nimport UsersList from './UsersList';\n\nconst App = React.createClass({\n  shouldComponentUpdate(nextProps) {\n    return Object.keys(nextProps.currentUser).length;\n  },\n\n  componentWillUpdate(nextProps) {\n    const ws = new WebSocket(`ws://127.0.0.1:8888/chat_app/${nextProps.currentUser.user_id}/`);\n\n    ws.onmessage = function(e) {\n      alert(e.data);\n    };\n  },\n\n  render() {\n    return (\n      <div className=\"Container\">\n        <ChatsList selectedChat={this.props.selectedChat} />\n        <ChatWindow selectedChat={this.props.selectedChat} />\n        <UsersList />\n      </div>\n    );\n  }\n});\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.currentUser,\n  selectedChat: state.selectedChat\n});\n\nexport default connect(mapStateToProps)(App)\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {addChatMessage} from 'actions';\n\nimport MessagesBlock from 'components/MessagesBlock';\nimport MessageForm from 'components/MessageForm';\n\nconst ChatWindow = ({selectedChat, messages, onChatMessage}) => {\n  if(Object.keys(selectedChat).length) {\n    return <div className=\"ChatWindow\">\n      <MessagesBlock chatMessages={messages[selectedChat.chat_id]} />\n      <MessageForm chat={selectedChat} onMessage={onChatMessage} />\n    </div>\n  }\n  else {\n    return <div className=\"ChatWindow-empty\" />\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  messages: state.messages\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChatMessage(chatId, message) {\n    dispatch(addChatMessage(chatId, message));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatWindow);\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {selectChat, loadChatMessages} from 'actions';\n\nimport Chat from 'components/Chat';\n\nconst ChatList = ({chats, selectedChat, onChatSelect}) => {\n  return <div className=\"ChatList\">\n    {chats.map(chat => {\n      return <Chat chat={chat} selectedChat={selectedChat} onSelect={onChatSelect} key={chat.chat_id} />\n    })}\n  </div>;\n}\n\nconst mapStateToProps = (state) => ({\n  chats: state.chats\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChatSelect(chat) {\n    dispatch(selectChat(chat));\n    dispatch(loadChatMessages(chat.chat_id));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatList);\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {createChat} from 'actions';\n\nimport User from 'components/User'\n\nconst UserList = ({users, onChatCreate}) => {\n  return <div className=\"UsersList\">\n    {users.map(user => {\n      return <User username={user.username} onChatCreate={onChatCreate} key={user.username} />;\n    })}\n  </div>;\n}\n\nconst mapStateToProps = (state) => ({\n  users: state.users\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChatCreate(username) {\n    dispatch(createChat(username));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserList);\n","require('es6-promise').polyfill();\nrequire('whatwg-fetch')\n\nimport ReactDOM from 'react-dom';\nimport React from 'react';\nimport {createStore, applyMiddleware} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport {Provider} from 'react-redux';\nimport 'whatwg-fetch';\n\nimport reducer from 'reducer';\nimport App from 'container/App';\n\nimport {initialFetchCurrentUser, initialFetchUsers, initialFetchChats} from 'actions';\n\nconst store = createStore(reducer, applyMiddleware(thunkMiddleware));\n\nstore.dispatch(initialFetchCurrentUser());\nstore.dispatch(initialFetchUsers());\nstore.dispatch(initialFetchChats());\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const el = document.createElement('div');\n  el.id = 'app';\n  document.body.appendChild(el);\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    el\n  );\n});\n","const initialState = {\n  currentUser: {},\n  users: [{'username': 'first'}, {'username': 'second'}, {'username': 'third'}],\n  chats: [],\n  selectedChat: {},\n  messages: {'2': [{'text': 'hello'}, {'text': 'hello'}, {'text': 'hello'},\n   {'text': 'hello'}, {'text': 'hello'}, {'text': 'hello'}, {'text': 'hello'} ]}\n};\n\nexport default function(state = initialState, action) {\n  let messages;\n  switch (action.type) {\n    case 'SELECT_CHAT':\n      return Object.assign({}, state, {selectedChat: action.chat});\n    case 'ADD_CHAT_MESSAGE':\n      const chatMessages = Array.from(state.messages[action.chatId]);\n      chatMessages.unshift({'text': action.message});\n      messages = Object.assign({}, state.messages);\n      messages[action.chatId] = chatMessages;\n      return Object.assign({}, state, { messages: messages });\n    case 'ADD_CHAT':\n      let chats = Array.from(state.chats);\n      chats.push(action.chat_id);\n      return Object.assign({}, state, {chats: chats});\n    case 'RECEIVE_CHAT_MESSAGES':\n      messages = Object.assign({}, state.messages);\n      messages[state.selectedChat] = action.chatMessages;\n      return Object.assign({}, state, { messages });\n    case 'RECEIVE_CURRENT_USER':\n      return Object.assign({}, state, { currentUser: action.user })\n    case 'RECEIVE_USERS':\n      return Object.assign({}, state, { users: action.users });\n    case 'RECEIVE_CHATS':\n      return Object.assign({}, state, { chats: action.chats });\n    default:\n      return state;\n  }\n}\n","export const createChat = (username) => {\n  return new Promise((resolve, reject) => {\n    fetch(`http://127.0.0.1:8000/chat/create_chat/?username=${username}`, {\n      method: 'GET',\n      credentials: 'same-origin'\n    })\n    .then(response => {\n      response.json().then(response => resolve(response.chat_id));\n    });\n  });\n};\n\n\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    fetch('http://127.0.0.1:8000/chat/get_current_user', {\n      method: 'GET',\n      credentials: 'same-origin'\n    })\n    .then(response => {\n      response.json().then(user => resolve(user));\n    });\n  });\n};\n\n\nexport const getAllUsers = () => {\n  return new Promise((resolve, reject) => {\n    fetch('http://127.0.0.1:8000/chat/get_all_users', {\n      method: 'GET',\n      credentials: 'same-origin'\n    })\n    .then(response => {\n      response.json().then(response => resolve(response.users));\n    });\n  });\n};\n\n\nexport const getUserChats = () => {\n  return new Promise((resolve, reject) => {\n    fetch('http://127.0.0.1:8000/chat/get_user_chats', {\n      method: 'GET',\n      credentials: 'same-origin'\n    })\n    .then(response => {\n      response.json().then(response => resolve(response.chats));\n    });\n  });\n};\n\n\nexport const loadChatMessages = (chatId) => {\n  return new Promise((resolve, reject) => {\n    fetch(`http://127.0.0.1:8000/chat/load_chat_messages/?chat_id=${chatId}`, {\n      method: 'GET',\n      credentials: 'same-origin'\n    })\n    .then(response => {\n      response.json().then(response => resolve(response.chat_messages));\n    });\n  });\n}\n"]}