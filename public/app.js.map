{"version":3,"sources":["app/actions.js","app/components/Chat.jsx","app/components/MessageForm.jsx","app/components/MessagesBlock.jsx","app/components/User.jsx","app/container/App.jsx","app/container/ChatWindow.jsx","app/container/ChatsList.jsx","app/container/UsersList.jsx","app/initialize.js","app/reducer.js","app/utils/apiCalls.js","app/utils/utils.js"],"names":[],"mappings":"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","file":"public/app.js","sourcesContent":["import {createChat as _createChat, loadChatMessages as _loadChatMessages,\n  getCurrentUser, getAllUsers, getUserChats} from 'utils/apiCalls';\n\nexport const selectChat = (chatId) => ({\n  type: 'SELECT_CHAT',\n  chatId\n});\n\nexport const addNewChatMessage = (chatId, message) => ({\n  type: 'ADD_NEW_CHAT_MESSAGE',\n  chatId,\n  message\n});\n\nexport const readChatMessage = (chatId) => ({\n  type: 'READ_CHAT_MESSAGE',\n  chatId\n});\n\nexport const createChat = (username) => {\n  return dispatch => {\n    _createChat(username).then(chatId => {\n      dispatch({ type: 'ADD_CHAT', chatId });\n    });\n  };\n};\n\nexport const loadChatMessages = (chatId) => {\n  return dispatch => {\n    _loadChatMessages(chatId).then(chatMessages => {\n      dispatch({ type: 'RECEIVE_CHAT_MESSAGES', chatId, chatMessages });\n    });\n  };\n};\n\nexport const initialFetchCurrentUser = () => {\n  return dispatch => {\n    getCurrentUser().then(user => {\n      dispatch({ type: 'RECEIVE_CURRENT_USER', user });\n    });\n  };\n};\n\nexport const initialFetchUsers = () => {\n  return dispatch => {\n    getAllUsers().then(users => {\n      dispatch({ type: 'RECEIVE_USERS', users });\n    });\n  };\n};\n\nexport const initialFetchChats = () => {\n  return dispatch => {\n    getUserChats().then(chats => {\n      dispatch({ type: 'RECEIVE_CHATS', chats});\n    });\n  };\n};\n","import React from 'react';\n\nconst dateFormat = require('dateformat');\n\nexport default React.createClass({\n  propTypes: {\n    chat: React.PropTypes.object.isRequired,\n    selectedChat: React.PropTypes.string.isRequired,\n    onSelect: React.PropTypes.func.isRequired\n  },\n\n  handleClick() {\n    this.props.onSelect(this.props.chat.chat_id);\n  },\n\n  render () {\n    const {chat, selectedChat} = this.props;\n    const className = (chat.chat_id === selectedChat) ? 'Chat-selected' : 'Chat';\n    const lastMessageClassName = chat.last_message_is_read ? 'LastMessage' : 'LastMessage-unread'\n    const messageTimestamp = dateFormat(chat.last_message_timestamp, 'mmm d')\n\n    return <div className={className} onClick={this.handleClick}>\n      <div>\n        <span>{chat.interlocutor_username}</span>\n        <div className=\"Timestamp\">{messageTimestamp}</div>\n      </div>\n      <div className={lastMessageClassName}>{chat.last_message}</div>\n    </div>;\n  }\n});\n","import React from 'react';\n\nimport {waitForSocketConnection} from 'utils/utils';\n\nlet ws;\n\nexport default React.createClass({\n  propTypes: {\n    chat: React.PropTypes.object.isRequired,\n    onMessage: React.PropTypes.func.isRequired\n  },\n\n  componentWillMount() {\n    const {chat} = this.props;\n\n    ws = new WebSocket(`ws://127.0.0.1:8888/tornado_chat/${chat.chat_id}/`);\n  },\n\n  componentDidMount() {\n    const {chat} = this.props;\n\n    // TODO switch to other checks\n    if(!chat.last_message_is_read && chat.last_message_sender_id.toString() === chat.interlocutor_id.toString()) {\n      const message = {\n        type: 'READ_MESSAGE',\n        interlocutorId: chat.interlocutor_id,\n      }\n\n      waitForSocketConnection(ws, function() {\n        ws.send(JSON.stringify(message));\n      });\n    }\n  },\n\n  componentWillUpdate(nextProps) {\n    const {chat} = nextProps;\n\n    if(chat.chat_id !== this.props.chat.chat_id) {\n      ws.close();\n      ws = new WebSocket(`ws://127.0.0.1:8888/tornado_chat/${nextProps.chat.chat_id}/`);\n    }\n  },\n\n  componentDidUpdate() {\n    const {chat} = this.props;\n\n    // TODO switch to other checks\n    if(!chat.last_message_is_read && chat.last_message_sender_id.toString() === chat.interlocutor_id.toString()) {\n      const message = {\n        type: 'READ_MESSAGE',\n        interlocutorId: chat.interlocutor_id,\n      }\n\n      waitForSocketConnection(ws, function() {\n        ws.send(JSON.stringify(message));\n      });\n    }\n  },\n\n  handleClick() {\n    const message = {\n      type: 'SEND_MESSAGE',\n      interlocutorId: this.props.chat.interlocutor_id,\n      message: this.refs.message.value\n    }\n\n    ws.send(JSON.stringify(message));\n    this.refs.message.value = '';\n  },\n\n  render() {\n    console.log(this.props.chat);\n    return <div className=\"MessageForm\">\n      <textarea ref=\"message\" type=\"text\" placeholder=\"Type your text here\" />\n      <button onClick={this.handleClick}>Send</button>\n    </div>\n  }\n});\n","import React from 'react';\n\nexport default React.createClass({\n  propTypes: {\n    chatMessages: React.PropTypes.array\n  },\n\n  render () {\n    const {chatMessages} = this.props;\n\n    return <div className=\"MessagesBlock\">\n      {chatMessages.map((message, i) => {\n        const className = message.is_read ? 'Message' : 'Message-unread';\n        return <div className={className} key={`message${i}`}>{message.text}</div>\n      })}\n    </div>;\n  }\n});\n","import React from 'react';\n\nexport default React.createClass({\n  propTypes: {\n    username: React.PropTypes.string.isRequired,\n    onChatCreate: React.PropTypes.func.isRequired\n  },\n\n  handleClick() {\n    this.props.onChatCreate(this.props.username);\n  },\n\n  render () {\n    const {username} = this.props;\n\n    return <div className=\"User\">\n      <div>{username}</div>\n      <button onClick={this.handleClick}>Start chat</button>\n    </div>;\n  }\n});\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {addNewChatMessage, readChatMessage} from 'actions';\n\nimport ChatsList from './ChatsList';\nimport ChatWindow from './ChatWindow';\nimport UsersList from './UsersList';\n\nconst App = React.createClass({\n\n  componentWillUpdate(nextProps) {\n    if(nextProps.currentUser !== this.props.currentUser) {\n      const {onNewChatMessage, onMessageRead} = this.props;\n\n      const ws = new WebSocket(`ws://127.0.0.1:8888/chat_app/${nextProps.currentUser.user_id}/`);\n\n      ws.onmessage = function(e) {\n        const data = JSON.parse(e.data);\n        if(data.type === 'SEND_MESSAGE') {\n          onNewChatMessage(data.chat_id, data.message);\n        }\n        else if(data.type === 'READ_MESSAGE') {\n          onMessageRead(data.chat_id);\n        }\n      };\n    }\n  },\n\n  render() {\n    return (\n      <div className=\"Container\">\n        <ChatsList selectedChat={this.props.selectedChat} />\n        <ChatWindow chats={this.props.chats}\n                    selectedChat={this.props.selectedChat}\n                    messages={this.props.messages} />\n        <UsersList />\n      </div>\n    );\n  }\n});\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.currentUser,\n  chats: state.chats,\n  selectedChat: state.selectedChat,\n  messages: state.messages\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onNewChatMessage(chatId, message) {\n    dispatch(addNewChatMessage(chatId, message));\n  },\n\n  onMessageRead(chatId) {\n    dispatch(readChatMessage(chatId));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport MessagesBlock from 'components/MessagesBlock';\nimport MessageForm from 'components/MessageForm';\n\nconst ChatWindow = ({chats, selectedChat, messages}) => {\n  if(selectedChat && messages[selectedChat]) {\n    return <div className=\"ChatWindow\">\n      <MessagesBlock chatMessages={messages[selectedChat]} />\n      <MessageForm chat={chats[selectedChat]} />\n    </div>\n  }\n  else {\n    return <div className=\"ChatWindow-empty\" />\n  }\n}\n\nexport default ChatWindow;\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {selectChat, loadChatMessages} from 'actions';\n\nimport Chat from 'components/Chat';\n\nconst ChatList = ({chats, selectedChat, onChatSelect}) => {\n  return <div className=\"ChatList\">\n    {Object.keys(chats).sort((key1, key2) => {\n      if(chats[key1].last_message_timestamp > chats[key2].last_message_timestamp) {\n        return -1;\n      }\n      else if(chats[key1].last_message_timestamp < chats[key2].last_message_timestamp) {\n        return +1;\n      }\n      else return 0;\n    }).map(key => {\n      return <Chat chat={chats[key]} selectedChat={selectedChat} onSelect={onChatSelect} key={key} />\n    })}\n  </div>;\n}\n\nconst mapStateToProps = (state) => ({\n  chats: state.chats\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChatSelect(chatId) {\n    dispatch(loadChatMessages(chatId));\n    dispatch(selectChat(chatId));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatList);\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {createChat} from 'actions';\n\nimport User from 'components/User'\n\nconst UserList = ({users, onChatCreate}) => {\n  return <div className=\"UsersList\">\n    {users.map(user => {\n      return <User username={user.username} onChatCreate={onChatCreate} key={user.username} />;\n    })}\n  </div>;\n}\n\nconst mapStateToProps = (state) => ({\n  users: state.users\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChatCreate(username) {\n    dispatch(createChat(username));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserList);\n","require('es6-promise').polyfill();\nrequire('whatwg-fetch');\n\nimport ReactDOM from 'react-dom';\nimport React from 'react';\nimport {createStore, applyMiddleware} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport {Provider} from 'react-redux';\nimport 'whatwg-fetch';\n\nimport reducer from 'reducer';\nimport App from 'container/App';\n\nimport {initialFetchCurrentUser, initialFetchUsers, initialFetchChats} from 'actions';\n\nconst store = createStore(reducer, applyMiddleware(thunkMiddleware));\n\nstore.dispatch(initialFetchCurrentUser());\nstore.dispatch(initialFetchUsers());\nstore.dispatch(initialFetchChats());\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const el = document.createElement('div');\n  el.id = 'app';\n  document.body.appendChild(el);\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    el\n  );\n});\n","const initialState = {\n  currentUser: {},\n  users: [{'username': 'first'}, {'username': 'second'}, {'username': 'third'}],\n  chats: {},\n  selectedChat: '',\n  messages: {'2': [{'text': 'hello'}, {'text': 'hello'}, {'text': 'hello'},\n   {'text': 'hello'}, {'text': 'hello'}, {'text': 'hello'}, {'text': 'hello'} ]}\n};\n\nexport default function(state = initialState, action) {\n  let chats;\n  let messages;\n  switch (action.type) {\n    case 'SELECT_CHAT':\n      return Object.assign({}, state, {selectedChat: action.chatId});\n    case 'ADD_NEW_CHAT_MESSAGE':\n      messages = Object.assign({}, state.messages);\n      if(messages[action.chatId]) {\n        const chatMessages = Array.from(state.messages[action.chatId]);\n        chatMessages.unshift({'text': action.message.text, 'timestamp': action.message.timestamp, 'is_read': false});\n        messages[action.chatId] = chatMessages;\n      }\n      chats = Object.assign({}, state.chats);\n      chats[action.chatId].last_message = action.message.text;\n      chats[action.chatId].last_message_sender_id = action.message.sender_id;\n      chats[action.chatId].last_message_timestamp = action.message.timestamp;\n      chats[action.chatId].last_message_is_read = false;\n      return Object.assign({}, state, { messages }, { chats });\n    case 'READ_CHAT_MESSAGE':\n      messages = Object.assign({}, state.messages);\n      if(messages[action.chatId]) {\n        for(let i = 0; i < messages[action.chatId].length; ++i) {\n          if(messages[action.chatId][i].is_read) {\n            break;\n          }\n          else {\n            messages[action.chatId][i].is_read = true;\n          }\n        }\n      }\n      chats = Object.assign({}, state.chats);\n      chats[action.chatId].last_message_is_read = true;\n      return Object.assign({}, state, { messages }, { chats });\n    case 'ADD_CHAT':\n      chats = Array.from(state.chats);\n      chats.push(action.chat_id);\n      return Object.assign({}, state, {chats: chats});\n    case 'RECEIVE_CHAT_MESSAGES':\n      messages = Object.assign({}, state.messages);\n      messages[action.chatId] = action.chatMessages;\n      return Object.assign({}, state, { messages });\n    case 'RECEIVE_CURRENT_USER':\n      return Object.assign({}, state, { currentUser: action.user })\n    case 'RECEIVE_USERS':\n      return Object.assign({}, state, { users: action.users });\n    case 'RECEIVE_CHATS':\n      return Object.assign({}, state, { chats: action.chats });\n    default:\n      return state;\n  }\n}\n","export const createChat = (username) => {\n  return new Promise((resolve, reject) => {\n    fetch(`http://127.0.0.1:8000/chat/create_chat/?username=${username}`, {\n      method: 'GET',\n      credentials: 'same-origin'\n    })\n    .then(response => {\n      response.json().then(response => resolve(response.chat_id));\n    });\n  });\n};\n\n\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    fetch('http://127.0.0.1:8000/chat/get_current_user', {\n      method: 'GET',\n      credentials: 'same-origin'\n    })\n    .then(response => {\n      response.json().then(user => resolve(user));\n    });\n  });\n};\n\n\nexport const getAllUsers = () => {\n  return new Promise((resolve, reject) => {\n    fetch('http://127.0.0.1:8000/chat/get_all_users', {\n      method: 'GET',\n      credentials: 'same-origin'\n    })\n    .then(response => {\n      response.json().then(response => resolve(response.users));\n    });\n  });\n};\n\n\nexport const getUserChats = () => {\n  return new Promise((resolve, reject) => {\n    fetch('http://127.0.0.1:8000/chat/get_user_chats', {\n      method: 'GET',\n      credentials: 'same-origin'\n    })\n    .then(response => {\n      response.json().then(response => resolve(response.chats));\n    });\n  });\n};\n\n\nexport const loadChatMessages = (chatId) => {\n  return new Promise((resolve, reject) => {\n    fetch(`http://127.0.0.1:8000/chat/load_chat_messages/?chat_id=${chatId}`, {\n      method: 'GET',\n      credentials: 'same-origin'\n    })\n    .then(response => {\n      response.json().then(response => resolve(response.chat_messages));\n    });\n  });\n}\n","export const waitForSocketConnection = (socket, callback) => {\n  setTimeout(\n    function() {\n      if(socket.readyState === 1) {\n        if(callback !== undefined){\n          callback();\n        }\n        return;\n      } else {\n        waitForSocketConnection(socket,callback);\n      }\n    }, 5);\n}\n"]}